'use client';

import React from 'react';
import { motion } from 'framer-motion';
import { FiArrowLeft, FiCode, FiDatabase, FiCpu, FiZap, FiTrendingUp, FiShield, FiGlobe, FiClock } from 'react-icons/fi';
import Link from 'next/link';
import './technical-journey.css';

export default function TechnicalJourney() {
  return (
    <div className="technical-journey">
      <div className="journey-container">
        {/* Back Button */}
        <Link href="/" className="back-link">
          <FiArrowLeft />
          Back to HackRadar
        </Link>

        {/* Hero Section */}
        <motion.div
          initial={{ opacity: 0, y: 20 }}
          animate={{ opacity: 1, y: 0 }}
          className="hero-section"
        >
          <h1 className="hero-title">
            The Technical Journey
          </h1>
          <p className="hero-subtitle">
            How Three Minds with One Vision Built HackRadar in 12 Hours
          </p>
          <div className="stats-grid">
            <div className="stat-card">
              <div className="stat-value">20,000+</div>
              <div className="stat-label">Lines of Code</div>
            </div>
            <div className="stat-card green">
              <div className="stat-value">2 üòä</div>
              <div className="stat-label">Lines Written by Hand</div>
            </div>
            <div className="stat-card purple">
              <div className="stat-value">$400</div>
              <div className="stat-label">AI Tokens Used</div>
            </div>
          </div>
        </motion.div>

        {/* AI-Powered Development Revolution - FEATURED PROMINENTLY */}
        <motion.section
          initial={{ opacity: 0, y: 20 }}
          animate={{ opacity: 1, y: 0 }}
          transition={{ delay: 0.15 }}
          className="section"
        >
          <h2 className="section-title">
            <FiZap className="section-icon" />
            ü§ñ AI-Powered Development Revolution
          </h2>
          
          <div className="ai-development-box">
            <h3 className="ai-dev-title">Built with Claude Code</h3>
            <div className="ai-stats-grid">
              <div className="ai-stat">
                <div className="ai-stat-number">99%</div>
                <div className="ai-stat-label">Code Generated by AI</div>
              </div>
              <div className="ai-stat">
                <div className="ai-stat-number">20,000+</div>
                <div className="ai-stat-label">Lines of Code</div>
              </div>
              <div className="ai-stat">
                <div className="ai-stat-number">12 Hours</div>
                <div className="ai-stat-label">Total Build Time</div>
              </div>
            </div>
            <p className="ai-dev-description">
              This entire platform was built using Claude Code - we literally wrote only 2 lines of code by hand üòä. 
              Everything else was AI-generated: the complex multi-agent system, React components, 
              API endpoints, CSS styling. $400 worth of AI tokens. This is the future of software development.
            </p>
          </div>
        </motion.section>

        {/* Architecture Section */}
        <motion.section
          initial={{ opacity: 0 }}
          animate={{ opacity: 1 }}
          transition={{ delay: 0.2 }}
          className="section"
        >
          <h2 className="section-title">
            <FiCpu className="section-icon" />
            System Architecture
          </h2>
          
          <div className="architecture-box">
            <div className="tech-grid">
              <div className="tech-section">
                <h3>Frontend Stack</h3>
                <ul className="tech-list">
                  <li>
                    <span className="bullet">‚ñ∏</span>
                    <span><strong>Next.js 15</strong> - Latest React framework with App Router</span>
                  </li>
                  <li>
                    <span className="bullet">‚ñ∏</span>
                    <span><strong>React 19</strong> - Cutting-edge UI library</span>
                  </li>
                  <li>
                    <span className="bullet">‚ñ∏</span>
                    <span><strong>TypeScript</strong> - 100% type-safe codebase</span>
                  </li>
                  <li>
                    <span className="bullet">‚ñ∏</span>
                    <span><strong>Tailwind CSS</strong> - Responsive, beautiful design</span>
                  </li>
                </ul>
              </div>
              
              <div className="tech-section">
                <h3>Backend Infrastructure</h3>
                <ul className="tech-list">
                  <li>
                    <span className="bullet">‚ñ∏</span>
                    <span><strong>MongoDB Atlas</strong> - Cloud database with global distribution</span>
                  </li>
                  <li>
                    <span className="bullet">‚ñ∏</span>
                    <span><strong>Anthropic Claude API</strong> - Advanced AI evaluation</span>
                  </li>
                  <li>
                    <span className="bullet">‚ñ∏</span>
                    <span><strong>Azure VM</strong> - Cloud deployment infrastructure</span>
                  </li>
                  <li>
                    <span className="bullet">‚ñ∏</span>
                    <span><strong>Claude Code</strong> - AI-powered development (99% of code)</span>
                  </li>
                  <li>
                    <span className="bullet">‚ñ∏</span>
                    <span><strong>Google OAuth</strong> - Secure authentication</span>
                  </li>
                </ul>
              </div>
            </div>
          </div>

          {/* Architecture Diagram */}
          <div className="architecture-diagram">
            <div className="diagram-layer frontend-layer">
              <div className="layer-title">üé® Frontend Layer</div>
              <div className="layer-content">
                <div className="tech-box">Next.js 15</div>
                <div className="tech-box">React 19</div>
                <div className="tech-box">TypeScript</div>
                <div className="tech-box">Tailwind CSS</div>
              </div>
            </div>
            
            <div className="diagram-connector">
              <div className="connector-line"></div>
              <div className="connector-label">HTTPS / WebSocket</div>
            </div>
            
            <div className="diagram-layer api-layer">
              <div className="layer-title">‚ö° API Layer</div>
              <div className="layer-content">
                <div className="endpoint-box">/api/projects</div>
                <div className="endpoint-box">/api/timeline</div>
                <div className="endpoint-box">/api/assess</div>
                <div className="endpoint-box">/api/leaderboard</div>
              </div>
            </div>
            
            <div className="diagram-connector">
              <div className="connector-line"></div>
              <div className="connector-label">AI Processing</div>
            </div>
            
            <div className="diagram-layer ai-layer">
              <div className="layer-title">üß† AI Evaluation Engine</div>
              <div className="layer-content three-col">
                <div className="agent-box">
                  <div className="agent-icon">üéØ</div>
                  <div className="agent-title">BaseAgent</div>
                  <div className="agent-subtitle">Orchestrator</div>
                </div>
                <div className="agent-box">
                  <div className="agent-icon">üìù</div>
                  <div className="agent-title">TextEvaluator</div>
                  <div className="agent-subtitle">Claude 3.5</div>
                </div>
                <div className="agent-box">
                  <div className="agent-icon">‚úÖ</div>
                  <div className="agent-title">SRTracker</div>
                  <div className="agent-subtitle">Checklist</div>
                </div>
              </div>
            </div>
            
            <div className="diagram-connector">
              <div className="connector-line"></div>
              <div className="connector-label">Data Persistence</div>
            </div>
            
            <div className="diagram-layer database-layer">
              <div className="layer-title">üíæ Database Layer</div>
              <div className="layer-content">
                <div className="db-box">Projects</div>
                <div className="db-box">Timeline</div>
                <div className="db-box">Evaluations</div>
                <div className="db-box">Users</div>
              </div>
            </div>
          </div>
        </motion.section>

        {/* AI Innovation Section */}
        <motion.section
          initial={{ opacity: 0 }}
          animate={{ opacity: 1 }}
          transition={{ delay: 0.3 }}
          className="section"
        >
          <h2 className="section-title">
            <FiZap className="section-icon" />
            AI Innovation: Multi-Agent System
          </h2>
          
          <div className="agents-grid">
            <div className="agent-card">
              <h3 className="agent-name">BaseAgent</h3>
              <p className="agent-role">The Orchestrator</p>
              <ul className="agent-features">
                <li>‚Ä¢ Maintains conversation continuity</li>
                <li>‚Ä¢ Enforces scoring anchors</li>
                <li>‚Ä¢ Prevents score regression</li>
              </ul>
            </div>
            
            <div className="agent-card green">
              <h3 className="agent-name">TextEvaluator</h3>
              <p className="agent-role">Deep Analyzer</p>
              <ul className="agent-features">
                <li>‚Ä¢ Conversation-aware scoring</li>
                <li>‚Ä¢ Evidence accumulation</li>
                <li>‚Ä¢ Cumulative evaluation</li>
              </ul>
            </div>
            
            <div className="agent-card purple">
              <h3 className="agent-name">SRTracker</h3>
              <p className="agent-role">Completeness Validator</p>
              <ul className="agent-features">
                <li>‚Ä¢ Auto-detects file types</li>
                <li>‚Ä¢ Validates submissions</li>
                <li>‚Ä¢ 15-point checklist system</li>
              </ul>
            </div>
          </div>

          {/* Scoring Breakdown */}
          <div className="scoring-box">
            <h3 className="scoring-title">Scoring Algorithm (100 Points Total)</h3>
            <div className="scoring-grid">
              {[
                { name: 'Clarity', points: 15, desc: 'Message clarity and structure' },
                { name: 'Problem Value', points: 20, desc: 'Pain point identification' },
                { name: 'Feasibility', points: 15, desc: 'Technical evidence' },
                { name: 'Originality', points: 15, desc: 'Innovation factor' },
                { name: 'Impact', points: 20, desc: 'Conversion potential' },
                { name: 'Readiness', points: 15, desc: 'Completeness check' }
              ].map((criterion) => (
                <div key={criterion.name} className="score-item">
                  <div className="score-details">
                    <div className="score-name">{criterion.name}</div>
                    <div className="score-desc">{criterion.desc}</div>
                  </div>
                  <div className="score-points">{criterion.points}</div>
                </div>
              ))}
            </div>
          </div>
        </motion.section>

        {/* Key Innovations */}
        <motion.section
          initial={{ opacity: 0 }}
          animate={{ opacity: 1 }}
          transition={{ delay: 0.5 }}
          className="section"
        >
          <h2 className="section-title">
            <FiCode className="section-icon" />
            Key Technical Innovations
          </h2>
          
          <div className="innovations">
            <div className="innovation-card">
              <h3 className="innovation-title">üß† Conversation Memory System</h3>
              <p className="innovation-desc">
                Revolutionary cumulative scoring that maintains context across multiple submissions. 
                Teams' scores can only improve or maintain - never decrease unfairly.
              </p>
              <div className="code-block">
                <code>
{`// Conversation continuity across evaluations
const messageHistory = await buildMessageHistory(projectId);
const evaluation = await evaluateWithContext(
  content, 
  messageHistory, 
  conversationId
);`}
                </code>
              </div>
            </div>

            <div className="innovation-card green">
              <h3 className="innovation-title">‚ö° Real-Time Progress Tracking</h3>
              <p className="innovation-desc">
                Timeline-based architecture enables perfect audit trails and historical tracking - 
                features typically found only in enterprise systems.
              </p>
              <div className="code-block">
                <code>
{`interface TimelineEntry {
  projectId: string;
  anthropic_conversation_id?: string;
  evaluation?: DetailedEvaluation;
  createdAt: Date;
}`}
                </code>
              </div>
            </div>

            <div className="innovation-card purple">
              <h3 className="innovation-title">üõ°Ô∏è Anti-Regression Logic</h3>
              <p className="innovation-desc">
                Innovative score anchoring system ensures teams are protected from scoring volatility. 
                Previous high scores become minimum thresholds.
              </p>
              <div className="code-block">
                <code>
{`// Enforce score anchors - scores never decrease
protected enforceAnchors(
  scores: Partial<EvaluationScores>
): EvaluationScores {
  return Math.max(scores.current, scores.previous);
}`}
                </code>
              </div>
            </div>
          </div>
        </motion.section>

        {/* Development Timeline */}
        <motion.section
          initial={{ opacity: 0 }}
          animate={{ opacity: 1 }}
          transition={{ delay: 0.6 }}
          className="section"
        >
          <h2 className="section-title">
            <FiClock className="section-icon" />
            12-Hour Development Sprint
          </h2>
          
          <div className="timeline-container">
            <div className="timeline-line"></div>
            
            {[
              { time: 'Hour 0-2', title: 'Domain & Infrastructure', desc: 'Deployed Vercel, configured domain, MongoDB Atlas setup' },
              { time: 'Hour 2-4', title: 'Core Development', desc: 'Next.js app, authentication, database schema' },
              { time: 'Hour 4-6', title: 'AI Multi-Agent System', desc: 'Claude API integration, TextEvaluator, SRTracker agents' },
              { time: 'Hour 6-8', title: 'Frontend & UX', desc: 'React components, timeline view, real-time updates' },
              { time: 'Hour 8-10', title: 'Customer Validation', desc: 'Talked with 10+ teams, gathered feedback, refined features' },
              { time: 'Hour 10-12', title: 'Testing & Polish', desc: 'End-to-end tests, API simulation, UI testing - finished at midnight' }
            ].map((phase, index) => (
              <div key={index} className="timeline-item">
                <div className="timeline-dot"></div>
                <div className="timeline-content">
                  <div className="timeline-time">{phase.time}</div>
                  <div className="timeline-title">{phase.title}</div>
                  <div className="timeline-desc">{phase.desc}</div>
                </div>
              </div>
            ))}
          </div>
        </motion.section>

        {/* Team Story */}
        <motion.section
          initial={{ opacity: 0 }}
          animate={{ opacity: 1 }}
          transition={{ delay: 0.7 }}
          className="section"
        >
          <h2 className="section-title">The Team Story</h2>
          
          <div className="story-box">
            <p className="story-text">
              What makes HackRadar special isn't just the technology - it's the story behind it. 
              A father (Ciprian) and son (Luca) working together, joined by <span className="team-member">Yehor</span> 
              in a beautiful collaboration.
            </p>
            <p className="story-text">
              The magic happened when <strong>Ciprian</strong> and <strong>Yehor</strong> discovered they had 
              the same idea independently - a joint vision for helping hackathon teams succeed.
            </p>
            <p className="story-text">
              <strong className="team-member">Yehor</strong> was the mastermind behind the AI agent specifications, 
              designing the multi-agent system, crafting all the prompts, and working directly with AI. He also 
              greatly improved the UI with finishing touches and product specifications.
            </p>
            <p className="story-text">
              <strong>Ciprian (Chip)</strong> handled everything DevOps - deployment on Azure, building pipelines, 
              and AI coding implementation. Together with Claude Code, we wrote only 2 lines of code by hand - 
              everything else was AI-assisted development.
            </p>
            <p className="story-text">
              <span className="son-name">Luca</span> brought the human touch - selling the product to teams, 
              gathering crucial feedback that shaped our features, and helping with UI screens.
            </p>
            <p className="story-text">
              Together, we didn't just build a hackathon project - we created a tool that genuinely 
              helps teams improve. We spent hours connecting with people, talking with teams, gathering 
              their feedback. The real victory was seeing teams' eyes light up when they received 
              actionable feedback that actually helped them improve their projects.
            </p>
            <p className="story-text">
              One of the most special moments was being able to pitch HackRadar to an existing team - 
              showing them how it could help improve their project in real-time. Watching their excitement 
              as they saw their scores improve with each iteration validated everything we built.
            </p>
            <p className="story-text">
              We leveraged LLMs to accelerate our testing strategy - implementing end-to-end tests for 
              the main application flows, simulating API calls, and testing the UI. The AI helped us write 
              tests and validate API responses directly. By hour 2, we had deployed to Vercel with our domain 
              configured. By hour 4, everything was working live. The rest of the time was spent refining 
              based on real customer feedback.
            </p>
          </div>
        </motion.section>

        {/* Final Stats */}
        <motion.section
          initial={{ opacity: 0 }}
          animate={{ opacity: 1 }}
          transition={{ delay: 0.8 }}
          className="section"
        >
          <h2 className="section-title">Final Statistics</h2>
          
          <div className="final-stats-grid">
            <div className="final-stat-card">
              <div className="final-stat-value">3</div>
              <div className="final-stat-label">Team Members United</div>
            </div>
            <div className="final-stat-card green">
              <div className="final-stat-value">10+</div>
              <div className="final-stat-label">Teams Interviewed</div>
            </div>
            <div className="final-stat-card purple">
              <div className="final-stat-value">E2E</div>
              <div className="final-stat-label">Test Strategy</div>
            </div>
          </div>
        </motion.section>

        {/* Call to Action */}
        <motion.div
          initial={{ opacity: 0, y: 20 }}
          animate={{ opacity: 1, y: 0 }}
          transition={{ delay: 0.9 }}
          className="cta-section"
        >
          <h2 className="cta-title">
            We didn't just build a tool.
            <br />
            <span className="cta-highlight">
              We built the future of hackathon feedback.
            </span>
          </h2>
          <div className="cta-buttons">
            <Link href="/" className="cta-btn cta-btn-primary">
              Try HackRadar
            </Link>
            <a 
              href="https://github.com/crarau/HackRadar"
              target="_blank"
              rel="noopener noreferrer"
              className="cta-btn cta-btn-secondary"
            >
              View on GitHub
            </a>
          </div>
        </motion.div>
      </div>
    </div>
  );
}